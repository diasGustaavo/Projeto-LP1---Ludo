#BlueJ class context
comment0.target=Casa
comment0.text=\n\ Classe\ abstrata\ Casa\ -\ escreva\ a\ descri\u00E7\u00E3o\ da\ classe\ aqui\n\ \n\ @author\ (seu\ nome\ aqui)\n\ @version\ (vers\u00E3o\ ou\ data)\n
comment1.params=cor\ anterior
comment1.target=Casa(java.lang.String,\ Casa)
comment1.text=\n\ Construtor\ padr\u00E3o\ de\ todas\ as\ casas\ do\ jogo\ \n
comment10.params=anterior
comment10.target=void\ setCasaAnterior(Casa)
comment10.text=\n\ Define\ a\ casa\ anterior\ a\ esta.\n\ @param\ anterior\ A\ casa\ anterior\ a\ esta.\n
comment11.params=peca
comment11.target=Casa\ getProximaCasa(Peca)
comment11.text=\n\ M\u00E9todo\ abstrato,\ respons\u00E1vel\ por\ retornar\ a\ proxima\ casa\ que\ uma\ pe\u00E7a\ deve\ ir\n\ Portanto\ cada\ subclasse\ dever\u00E1\ defini-lo\ \ \ \ \ \ \n
comment12.params=jogo
comment12.target=Casa\ obterCasaDestino(Jogo)
comment12.text=\n\ Retorna\ a\ casa\ que\ a\ pe\u00E7a\ passada\ pro\ met\u00F3do\ deve\ ir,\ de\ acordo\ com\ o\ estado\ do\ jogo\n
comment13.params=
comment13.target=boolean\ ehEntradaZonaSegura()
comment13.text=\n\ Verifica\ se\ existe\ alguma\ casa\ especial\ de\ zona\ segura\ em\ frente\ a\ esta.\n\ Consulte\ obterCasaSegura()\ para\ mais\ detalhes.\n\ @return\ Se\ possui\ casa\ de\ zona\ segura\ em\ frente\ a\ esta.\n
comment14.params=
comment14.target=boolean\ ehCasaFinal()
comment14.text=\n\ Se\ a\ \u00E9\ a\ \u00FAltima\ casa\ do\ jogador\ (isto\ \u00E9,\ se\ \u00E9\ a\ casa\ que\ o\ jogador\ almeja\n\ colocar\ todas\ as\ suas\ pe\u00E7as).\n\ Esta\ casa\ deve\ ter\ algumas\ propriedades\ particulares,\ como\ empilhar\ mais\n\ de\ uma\ pe\u00E7a\ (isto\ \u00E9,\ pode\ conter\ mais\ de\ uma\ pe\u00E7a).\n\ Explica\u00E7\u00E3o\:\ Se\ a\ casa\ n\u00E3o\ tem\ sucessor\ mas\ tem\ antecessor,\ ent\u00E3o\ \u00E9\ uma\n\ casa\ terminal.\n\ @return\ true\ se\ \u00E9\ a\ casa\ final.\n
comment15.params=
comment15.target=boolean\ pertenceGuarita()
comment15.text=\n\ Se\ a\ casa\ pertence\ a\ alguma\ guarita\ de\ algum\ jogador.\n\ Consulte\ o\ m\u00E9todo\ obterGuarita().\n\ @return\ True\ caso\ perten\u00E7a,\ false\ caso\ contr\u00E1rio.\n
comment16.params=
comment16.target=java.lang.String\ getCor()
comment16.text=\n\ Obt\u00E9m\ a\ cor\ desta\ casa\ ou\ "Branco"\ caso\ seja\ neutra.\n\ Consulte\ a\ classe\ Cores\ para\ mais\ detalhes.\n\ \n\ @return\ Cor\ da\ casa.\n
comment2.params=
comment2.target=boolean\ possuiPeca()
comment2.text=\n\ Se\ a\ casa\ possui\ pe\u00E7a.\n\n\ @return\ true\ se\ a\ casa\ possui\ pe\u00E7a;\ false\ caso\ contr\u00E1rio.\n
comment3.params=
comment3.target=Peca\ getPeca()
comment3.text=\n\ Obt\u00E9m\ a\ pe\u00E7a\ presente\ nesta\ casa,\ se\ houver.\n\n\ @return\ A\ pe\u00E7a\ se\ presente\ nesta\ casa\ ou\ null\ caso\ contr\u00E1rio.\n
comment4.params=peca
comment4.target=void\ setPeca(Peca)
comment4.text=\n\ Coloca\ a\ pe\u00E7a\ especificada\ nesta\ Casa.\n\n\ @param\ peca\ Pe\u00E7a\ que\ ser\u00E1\ inserida.\n\ @return\ A\ pe\u00E7a\ que\ estava\ anteriormente\ nesta\ casa,\ ou\ null\ caso\ n\u00E3o\n\ houvesse\ alguma.\n
comment5.params=
comment5.target=int\ getQuantidadePecas()
comment5.text=\n\ Obt\u00E9m\ a\ quantidade\ de\ pe\u00E7as\ presente\ nesta\ casa.\n\ Este\ m\u00E9todo\ \u00E9\ designado\ para\ casas\ finais,\ consulte\ o\ m\u00E9todo\ casaFinal()\n\ para\ mais\ detalhes.\n\ @return\ Quantidade\ de\ pe\u00E7as\ na\ casa.\n
comment6.params=quantidade
comment6.target=void\ setQuantidadePecas(int)
comment6.text=\n\ Define\ a\ quantidade\ de\ pe\u00E7as\ presente\ nesta\ casa.\n\ Este\ m\u00E9todo\ \u00E9\ designado\ para\ casas\ finais,\ consulte\ o\ m\u00E9todo\ casaFinal()\n\ para\ mais\ detalhes.\n\ @param\ quantidade\ Quantidade\ de\ pe\u00E7as\ na\ casa.\n
comment7.params=
comment7.target=Casa\ getCasaSegura()
comment7.text=\n\ Define\ a\ casa\ seguinte\ a\ esta.\n\ @param\ seguinte\ A\ casa\ seguinte\ a\ esta.\n
comment8.params=seguinte
comment8.target=void\ setCasaSeguinte(Casa)
comment8.text=\n\ Define\ a\ casa\ seguinte\ a\ esta.\n\ @param\ seguinte\ A\ casa\ seguinte\ a\ esta.\n
comment9.params=
comment9.target=Casa\ getCasaSeguinte()
comment9.text=\n\ Define\ a\ casa\ seguinte\ a\ esta.\n\ @param\ seguinte\ A\ casa\ seguinte\ a\ esta.\n
numComments=17
